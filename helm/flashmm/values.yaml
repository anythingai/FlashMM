# FlashMM Helm Chart Values
# Default configuration values for FlashMM deployment

# =============================================================================
# Global Configuration
# =============================================================================
global:
  imageRegistry: "ghcr.io"
  imageTag: "latest"
  storageClass: "fast-ssd"
  environment: "production"
  domain: "flashmm.com"
  
# =============================================================================
# FlashMM Application Configuration
# =============================================================================
flashmm:
  image:
    repository: "ghcr.io/flashmm/flashmm"
    tag: "latest"
    pullPolicy: "Always"
  
  replicaCount: 3
  
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
      ephemeral-storage: "1Gi"
    limits:
      memory: "4Gi"
      cpu: "2"
      ephemeral-storage: "5Gi"
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  podDisruptionBudget:
    enabled: true
    minAvailable: 2
  
  config:
    environment: "production"
    debug: false
    logLevel: "INFO"
    trading:
      enabled: true
      maxPositionUSDC: 10000.0
      quoteFrequencyHz: 10.0
      maxQuoteLevels: 5
      spreadBufferBps: 3.0
    ml:
      confidenceThreshold: 0.7
      inferenceTimeoutMs: 5
  
  secrets:
    seiPrivateKey: ""
    cambrianApiKey: ""
    cambrianSecretKey: ""
    azureOpenAIKey: ""
    jwtSecretKey: ""
    encryptionKey: ""
  
  persistence:
    data:
      enabled: true
      size: 50Gi
      storageClass: "fast-ssd"
    models:
      enabled: true
      size: 20Gi
      storageClass: "fast-ssd"
      accessMode: ReadWriteMany

# =============================================================================
# Redis Configuration
# =============================================================================
redis:
  enabled: true
  architecture: "replication"
  auth:
    enabled: true
    password: ""
  master:
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "2Gi"
        cpu: "1"
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "fast-ssd"
  replica:
    replicaCount: 2
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "2Gi"
        cpu: "1"
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# =============================================================================
# PostgreSQL Configuration
# =============================================================================
postgresql:
  enabled: true
  architecture: "replication"
  auth:
    postgresPassword: ""
    database: "flashmm_prod"
    username: "flashmm"
    password: ""
    replicationUsername: "replicator"
    replicationPassword: ""
  primary:
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "4Gi"
        cpu: "2"
    persistence:
      enabled: true
      size: 100Gi
      storageClass: "fast-ssd"
  readReplicas:
    replicaCount: 1
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "4Gi"
        cpu: "2"
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# =============================================================================
# InfluxDB Configuration
# =============================================================================
influxdb:
  enabled: true
  image:
    repository: "influxdb"
    tag: "2.7-alpine"
  
  resources:
    requests:
      memory: "2Gi"
      cpu: "500m"
    limits:
      memory: "8Gi"
      cpu: "4"
  
  persistence:
    enabled: true
    size: 200Gi
    storageClass: "fast-ssd"
  
  config:
    admin:
      username: "admin"
      password: ""
      token: ""
    organization: "flashmm-prod"
    bucket: "metrics"
    retention: "90d"

# =============================================================================
# Monitoring Configuration
# =============================================================================
monitoring:
  enabled: true
  
  prometheus:
    enabled: true
    server:
      resources:
        requests:
          memory: "2Gi"
          cpu: "1"
        limits:
          memory: "4Gi"
          cpu: "2"
      persistence:
        enabled: true
        size: 100Gi
        storageClass: "fast-ssd"
      retention: "90d"
    
    alertmanager:
      enabled: true
      resources:
        requests:
          memory: "256Mi"
          cpu: "250m"
        limits:
          memory: "512Mi"
          cpu: "500m"
      persistence:
        enabled: true
        size: 5Gi
  
  grafana:
    enabled: true
    admin:
      username: "admin"
      password: ""
    resources:
      requests:
        memory: "512Mi"
        cpu: "500m"
      limits:
        memory: "1Gi"
        cpu: "1"
    persistence:
      enabled: true
      size: 10Gi
    
    dashboards:
      enabled: true
      label: "grafana_dashboard"
    
    datasources:
      enabled: true

# =============================================================================
# Logging Configuration
# =============================================================================
logging:
  enabled: true
  
  elasticsearch:
    enabled: true
    replicas: 3
    resources:
      requests:
        memory: "2Gi"
        cpu: "1"
      limits:
        memory: "4Gi"
        cpu: "2"
    persistence:
      enabled: true
      size: 100Gi
      storageClass: "fast-ssd"
  
  kibana:
    enabled: true
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"
  
  logstash:
    enabled: true
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"

# =============================================================================
# Ingress Configuration
# =============================================================================
ingress:
  enabled: true
  className: "nginx"
  
  nginx:
    enabled: true
    controller:
      resources:
        requests:
          memory: "256Mi"
          cpu: "250m"
        limits:
          memory: "512Mi"
          cpu: "500m"
  
  certManager:
    enabled: true
    issuer: "letsencrypt-prod"
    email: "ops@flashmm.com"
  
  hosts:
    - host: "api.flashmm.com"
      paths:
        - path: "/"
          pathType: "Prefix"
          service: "flashmm-app"
          port: 8000
    - host: "grafana.flashmm.com" 
      paths:
        - path: "/"
          pathType: "Prefix"
          service: "flashmm-grafana"
          port: 3000
    - host: "prometheus.flashmm.com"
      paths:
        - path: "/"
          pathType: "Prefix"
          service: "prometheus"
          port: 9090
    - host: "kibana.flashmm.com"
      paths:
        - path: "/"
          pathType: "Prefix"
          service: "kibana"
          port: 5601
  
  tls:
    enabled: true
    secretName: "flashmm-tls-secret"

# =============================================================================
# Security Configuration
# =============================================================================
security:
  podSecurityPolicy:
    enabled: true
  
  networkPolicy:
    enabled: true
    ingress:
      enabled: true
    egress:
      enabled: true
  
  rbac:
    enabled: true
    create: true
  
  serviceAccount:
    create: true
    name: "flashmm"
    annotations: {}

# =============================================================================
# Backup Configuration
# =============================================================================
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: "30d"
  
  s3:
    bucket: "flashmm-backups-prod"
    region: "us-east-1"
    accessKeyId: ""
    secretAccessKey: ""
    encryptionKey: ""
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# =============================================================================
# External Dependencies
# =============================================================================
external:
  sei:
    network: "testnet"
    rpcUrl: "https://sei-testnet-rpc.polkachu.com"
    wsUrl: "wss://sei-testnet-rpc.polkachu.com/websocket"
    chainId: "atlantic-2"
  
  cambrian:
    baseUrl: "https://api.cambrian.com"
  
  azure:
    openai:
      endpoint: "https://your-openai-instance.openai.azure.com/"
      apiVersion: "2023-12-01-preview"

# =============================================================================
# Environment-specific Overrides
# =============================================================================
environments:
  development:
    flashmm:
      replicaCount: 1
      config:
        debug: true
        logLevel: "DEBUG"
      autoscaling:
        enabled: false
    redis:
      replica:
        replicaCount: 0
    postgresql:
      readReplicas:
        replicaCount: 0
    monitoring:
      prometheus:
        server:
          retention: "7d"
    ingress:
      certManager:
        issuer: "letsencrypt-staging"
  
  staging:
    flashmm:
      replicaCount: 2
      autoscaling:
        maxReplicas: 5
    monitoring:
      prometheus:
        server:
          retention: "30d"
  
  production:
    flashmm:
      replicaCount: 3
      autoscaling:
        maxReplicas: 10
    redis:
      replica:
        replicaCount: 2
    postgresql:
      readReplicas:
        replicaCount: 1
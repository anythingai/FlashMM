# FlashMM Kubernetes Secrets
# Sensitive configuration data encrypted at rest

apiVersion: v1
kind: Secret
metadata:
  name: flashmm-secrets
  namespace: flashmm
  labels:
    app.kubernetes.io/name: flashmm
    app.kubernetes.io/component: secrets
    app.kubernetes.io/part-of: flashmm-platform
type: Opaque
stringData:
  # Database Passwords
  POSTGRES_PASSWORD: "change_me_postgres_prod_password"
  POSTGRES_REPLICATION_PASSWORD: "change_me_replication_password"
  REDIS_PASSWORD: "change_me_redis_prod_password"
  GRAFANA_DB_PASSWORD: "change_me_grafana_db_password"
  GRAFANA_SECRET_KEY: "change_me_grafana_secret_key_32_chars"
  
  # Application Secrets
  SECRET_KEY: "change_me_jwt_secret_key_make_it_very_long_and_random"
  ENCRYPTION_KEY: "change_me_encryption_key_32_bytes_base64_encoded="
  API_AUTH_TOKEN: "change_me_admin_api_token_here"
  
  # External API Keys
  SEI_PRIVATE_KEY: "change_me_sei_private_key_here"
  CAMBRIAN_API_KEY: "change_me_cambrian_api_key_here"
  CAMBRIAN_SECRET_KEY: "change_me_cambrian_secret_key_here"
  AZURE_OPENAI_API_KEY: "change_me_azure_openai_api_key_here"
  AZURE_OPENAI_ENDPOINT: "https://your-openai-instance.openai.azure.com/"
  
  # InfluxDB Configuration
  INFLUXDB_ADMIN_PASSWORD: "change_me_influxdb_admin_password"
  INFLUXDB_TOKEN: "change_me_influxdb_token_64_characters_long_token_here="
  
  # Grafana Configuration
  GRAFANA_ADMIN_PASSWORD: "change_me_grafana_admin_password"
  
  # Monitoring and Alerting
  ALERT_WEBHOOK_URL: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  SMTP_PASSWORD: "change_me_smtp_password_for_alerts"
  
  # External Integrations
  TWITTER_BEARER_TOKEN: "change_me_twitter_bearer_token"
  TWITTER_API_KEY: "change_me_twitter_api_key"
  TWITTER_API_SECRET: "change_me_twitter_api_secret"
  
  # ELK Stack
  ELASTIC_PASSWORD: "change_me_elasticsearch_password"

---
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: flashmm
  labels:
    app.kubernetes.io/name: flashmm
    app.kubernetes.io/component: registry
    app.kubernetes.io/part-of: flashmm-platform
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "ghcr.io": {
          "username": "your-github-username",
          "password": "your-github-token",
          "email": "your-email@example.com",
          "auth": "base64-encoded-username:token"
        }
      }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: flashmm
  labels:
    app.kubernetes.io/name: flashmm
    app.kubernetes.io/component: tls
    app.kubernetes.io/part-of: flashmm-platform
type: kubernetes.io/tls
stringData:
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    # Replace with your actual TLS certificate
    # This should be generated by cert-manager or provided manually
    -----END CERTIFICATE-----
  tls.key: |
    -----BEGIN PRIVATE KEY-----
    # Replace with your actual private key
    # Keep this secret secure!
    -----END PRIVATE KEY-----

---
apiVersion: v1
kind: Secret
metadata:
  name: backup-secrets
  namespace: flashmm
  labels:
    app.kubernetes.io/name: backup
    app.kubernetes.io/component: secrets
    app.kubernetes.io/part-of: flashmm-platform
type: Opaque
stringData:
  AWS_ACCESS_KEY_ID: "change_me_aws_access_key"
  AWS_SECRET_ACCESS_KEY: "change_me_aws_secret_key"
  AWS_DEFAULT_REGION: "us-east-1"
  BACKUP_S3_BUCKET: "flashmm-backups-prod"
  BACKUP_ENCRYPTION_KEY: "change_me_backup_encryption_key"

---
# Service Account Token Secret for Prometheus
apiVersion: v1
kind: Secret
metadata:
  name: prometheus-token
  namespace: flashmm-monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: serviceaccount
    app.kubernetes.io/part-of: flashmm-platform
  annotations:
    kubernetes.io/service-account.name: prometheus
type: kubernetes.io/service-account-token
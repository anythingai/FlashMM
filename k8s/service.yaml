# FlashMM Kubernetes Services
# Network services for all application components

apiVersion: v1
kind: Service
metadata:
  name: flashmm-app
  namespace: flashmm
  labels:
    app: flashmm
    app.kubernetes.io/name: flashmm
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: flashmm-platform
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8000
      targetPort: http
      protocol: TCP
    - name: metrics
      port: 8000
      targetPort: metrics
      protocol: TCP
  selector:
    app: flashmm
    app.kubernetes.io/name: flashmm

---
# Redis Master Service
apiVersion: v1
kind: Service
metadata:
  name: flashmm-redis-master
  namespace: flashmm
  labels:
    app: redis
    role: master
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: flashmm-platform
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "6379"
spec:
  type: ClusterIP
  ports:
    - name: redis
      port: 6379
      targetPort: redis
      protocol: TCP
  selector:
    app: redis
    role: master

---
# Redis Headless Service for Sentinel Discovery
apiVersion: v1
kind: Service
metadata:
  name: flashmm-redis-headless
  namespace: flashmm
  labels:
    app: redis
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: flashmm-platform
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: redis
      port: 6379
      targetPort: redis
      protocol: TCP
  selector:
    app: redis

---
# PostgreSQL Master Service
apiVersion: v1
kind: Service
metadata:
  name: flashmm-postgres
  namespace: flashmm
  labels:
    app: postgres
    role: master
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: flashmm-platform
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5432"
spec:
  type: ClusterIP
  ports:
    - name: postgres
      port: 5432
      targetPort: postgres
      protocol: TCP
  selector:
    app: postgres
    role: master

---
# PostgreSQL Headless Service for Replication
apiVersion: v1
kind: Service
metadata:
  name: flashmm-postgres-headless
  namespace: flashmm
  labels:
    app: postgres
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: flashmm-platform
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: postgres
      port: 5432
      targetPort: postgres
      protocol: TCP
  selector:
    app: postgres

---
# InfluxDB Service
apiVersion: v1
kind: Service
metadata:
  name: flashmm-influxdb
  namespace: flashmm
  labels:
    app: influxdb
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: flashmm-platform
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8086"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8086
      targetPort: http
      protocol: TCP
  selector:
    app: influxdb

---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: flashmm-grafana
  namespace: flashmm-monitoring
  labels:
    app: grafana
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: flashmm-platform
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3000
      targetPort: http
      protocol: TCP
  selector:
    app: grafana

---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: flashmm-monitoring
  labels:
    app: prometheus
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: flashmm-platform
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9090
      targetPort: http
      protocol: TCP
  selector:
    app: prometheus

---
# AlertManager Service
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: flashmm-monitoring
  labels:
    app: alertmanager
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: flashmm-platform
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9093
      targetPort: http
      protocol: TCP
  selector:
    app: alertmanager

---
# Elasticsearch Service
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: flashmm-monitoring
  labels:
    app: elasticsearch
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: flashmm-platform
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9200
      targetPort: http
      protocol: TCP
    - name: transport
      port: 9300
      targetPort: transport
      protocol: TCP
  selector:
    app: elasticsearch

---
# Kibana Service
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: flashmm-monitoring
  labels:
    app: kibana
    app.kubernetes.io/name: kibana
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: flashmm-platform
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5601
      targetPort: http
      protocol: TCP
  selector:
    app: kibana

---
# Nginx Service
apiVersion: v1
kind: Service
metadata:
  name: flashmm-nginx
  namespace: flashmm
  labels:
    app: nginx
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: flashmm-platform
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: https
      port: 443
      targetPort: https
      protocol: TCP
  selector:
    app: nginx

---
# External LoadBalancer Service for Production (Optional)
apiVersion: v1
kind: Service
metadata:
  name: flashmm-loadbalancer
  namespace: flashmm
  labels:
    app: flashmm
    app.kubernetes.io/name: flashmm-lb
    app.kubernetes.io/component: loadbalancer
    app.kubernetes.io/part-of: flashmm-platform
  annotations:
    # AWS Load Balancer Controller annotations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "8000"
    # GCP Load Balancer annotations
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "flashmm-backend-config"}'
    # Azure Load Balancer annotations
    service.beta.kubernetes.io/azure-load-balancer-internal: "false"
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 8000
      protocol: TCP
    - name: https
      port: 443
      targetPort: 8000
      protocol: TCP
  selector:
    app: flashmm
    app.kubernetes.io/name: flashmm
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800